ps - 프로세스 확인 명령어
ps aux - 백그라운드에서 돌아가고 있는 프로세스 확인
kill PID - 해당 PID 프로세스 종료 (sudo)
top, htop - 프로세스 확인
	- virt - 물리적 메모리 크기
	- res - 실제적인 사용량

nano - 에디터 편집

grep 문자열찾기 명령어 - https://coding-factory.tistory.com/802
==================================================
백그라운드 실행
ctrl z - 현재 작업하고 있는 프로세스를 일시 중지하고 빠져 옴
fg - 가장 최근의 작업을 포그라운드로 불러옴
bg - 가장 최근의 작업을 백그라운드로 실행한다.
jobs - 백그라운드에 있는 작업 표시


%번호 : 현재 프로세스 백,포그라운드 프로세스 순서
+ : 가장 최근에 작업한 프로세스
-  : 그 다음 프로세스
공백 : 그 다음 프로세스

==================================================
ls -R / > result.txt 2> error.log 
	- 모든 디렉토리에 있는 파일 확인 후 result.txt에 기록
	- 에러는 error.log에 기록
ls -R / > result.txt 2> error.log &
	- 위의 실행을 백그라운드에서 실행 끝나면 Exit 메세지가 보이면서 끝

====================================================

daemon - 항상 켜져있는 프로그램 ex) server
	- cd /etc/init.d/ - 데몬 프로그램 경로
	- service 로 우회해서 실행
	- sudo service [프로그램 이름][명령어] - 데몬 프로그램 작업
		[명령어] start, stop : 필수 명령어
	- 자동으로 실행시키려면 /etc/rc3.d or rc5.d/ 에 들어가서 링크를 걸어줌

====================================================
cron 
	- 정기적으로 작업해야 할때
	- crontab : cron 작업(구글링 해볼것) 

====================================================

쉘의 스타트업 설정, 스타트업 스크립트
- 쉘을 시작했을 때 여러 설정 관리
- bashrc 파일을 에디터로 열고 작성

====================================================
사용자 관리
- id : 사용자 목록 출력 (현재 사용자)
- who : 현재 시스템에 누가 접속해있는지 확인
- 2가지 형태의 사용자 : super(root) user vs user(일반 사용자)
- super user인지 확인하는 방법 : root라고 표현되어 있음
- super user로 지정하는 법 : 
	1.su  - root 명령어 사용
	2. sudo passwd -u root : password를 초기화
	                      -l root : lock			   
- root의 경로와 / 의 하위 디렉토리에 있음
- 일반사용자로 변경 : exit,logout

일반 사용자
/home 디렉토리에 있음
$ : 일반 사용자

일반사용자 추가
- sudo useradd -m [사용자이름] 

====================================================
~ : 홈 디렉토리

alias : 별명 설정  ex) alias l = 'ls -al'
tail : 해당 파일의 가장 마지막 텍스트 출력
tail -f : 해당 파일이 수정이 되면 가장 최신 마지막 텍스트 출력

2 : 표준 에러
1 : 표준 출력
ex) 2>&1 : 표준 에러를 표준 출력으로 경로를 바꿈



======================================================